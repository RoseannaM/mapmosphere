{"version":3,"sources":["Video.jsx","Modal.jsx","MessagePopup.jsx","setLocation.js","MessageForm.jsx","Imageview.jsx","Map.jsx","RegistrationForm.jsx","LoginForm.jsx","AllLikes.jsx","Navbar.jsx","UserProfile.js","App.jsx","serviceWorker.js","index.jsx","Stars_Timelapse_from_Beach_1Videvo.mov","earth-animated.gif"],"names":["Video","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","videoURL","video","react_default","a","createElement","loop","muted","autoPlay","playsInline","playbackRate","poster","src","type","Component","Modal","handleClose","e","className","target","history","push","modalDiv","React","createRef","_this$props","children","error","onScroll","formName","onClick","ref","id","scroll","withRouter","MessagePopup","handleLike","preventDefault","liked","message_id","user_id","session","args","fetch","credentials","method","body","JSON","stringify","headers","Content-Type","then","res","json","ok","likeMessage","catch","console","_this$props2","text","city","country","loggedIn","logged_in","src_Modal","index_es","icon","faHeartSolid","faHeartRegular","react_router_dom","to","concat","faImages","setLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","latitude","coords","longitude","process","myJson","_myJson$features","slicedToArray","features","lat","lng","log","alert","MessageFormView","getUserLocation","setState","location","handleSubmit","_ref","messageData","messageText","addMessage","handleChange","value","onSubmit","name","rows","cols","onChange","styled","div","_templateObject","Imageview","loading","images","_this2","imageUrl","graphql","edge_location_to_media","edges","slice","_this$state","alt","globe","length","map","image","i","key","node","display_url","mapStyle","position","top","left","width","height","flex","border","boxShadow","borderRadius","StyledPopup","Map_templateObject","styles","clusterMarker","backgroundColor","display","justifyContent","alignItems","color","cursor","marker","paint","circle-blur","circle-color","circle-radius","circle-stroke-width","circle-stroke-color","circle-stroke-opacity","Map","ReactMapboxGl","accessToken","MapCompTest","coordinates","pointCount","getLeaves","lib_esm","toString","style","clusterClick","bind","assertThisInitialized","onMove","popup","undefined","total","stopPropagation","leaves","createCoord","markerGeoJson","find","feature","properties","clickedFeature","geometry","message","geojson","toConsumableArray","getFeature","filter","f","_objectSpread","shortenText","substring","zoom","center","markerClick","handleMapClick","onStyleLoad","_this3","containerStyle","renderChildrenInPortal","ClusterMarkerFactory","radius","data-feature","title","offset","leaf","index","layerOptions","react_router","path","render","MessageForm","params","parseInt","match","MessagePopup_MessagePopup","src_Imageview","RegistrationFormView","email","password","onLogin","errorMessage","LoginFormView","AllLikes","fetchData","likeMessagesUrl","page","prevState","setIsFetching","hasNext","allLikedFeatures","handleScroll","isFetching","element","scrollHeight","scrollTop","clientHeight","prevProps","simplebar_react_esm","Navbar","handleLogout","onlogOut","faPlusCircle","faHeart","faSignOutAlt","src_AllLikes","RegistrationForm","LoginForm","UserProfile","response","App","getSession","src_Video","src_Navbar","src_Map","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.01d3248c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport video from './Stars_Timelapse_from_Beach_1Videvo.mov';\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoURL: video\n    };\n  }\n\n  render() {\n    return (\n      <video loop muted autoPlay playsInline playbackRate={0.5} poster={video}>\n        <source src={video} type=\"video/mp4\" />\n      </video>\n    );\n  }\n}\n\nexport default Video;\n","import React, { Component, ReactDOM } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { visible } from 'ansi-colors';\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.props = this.props;\n    this.modalDiv = React.createRef();\n  }\n\n  handleClose = e => {\n    const className = e.target.className;\n    if (\n      className === 'modal' ||\n      className === 'modal-btn' ||\n      className === 'fa fa-times'\n    ) {\n      this.props.history.push('/');\n    }\n  };\n\n  render() {\n    const { children, onScroll, error, formName } = this.props;\n    return (\n      <div>\n        <div onClick={this.handleClose} className=\"modal\" ref={this.modalDiv}>\n          <section\n            id={this.props.id}\n            onScroll={this.props.scroll}\n            className=\"modal-main\"\n          >\n            <p>{error}</p>\n            <h3>{formName}</h3>\n            {children}\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(Modal);\n","import React, { Component } from 'react';\nimport Modal from './Modal';\nimport {\n  withRouter,\n  Redirect,\n  Route,\n  Link,\n  BrowserRouter as Router \n} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as faHeartRegular, faImages } from '@fortawesome/free-regular-svg-icons';\nimport {\n  faHeart as faHeartSolid,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default class MessagePopup extends Component {\n  handleLike = e => {\n    e.preventDefault();\n    const { liked, message_id } = this.props;\n    const user_id = this.props.session.id;\n    const likeMessageUrl =\n      'http://0.0.0.0:5000/spirit/api/v1.0/messages/' + message_id + '/like';\n    const args = { liked: liked, message_id: message_id, user_id: user_id };\n\n    fetch(likeMessageUrl, {\n      credentials: 'include',\n      method: liked ? 'DELETE' : 'POST',\n      body: JSON.stringify(args),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        return res.json()\n        .then(json => {\n          if (res.ok) {\n            const state = liked ? false : true;\n            this.props.likeMessage(message_id, state);\n          }\n        });\n      })\n      .catch(error => console.error('Error:', error));\n  };\n\n  render() {\n    const { session, liked, text, city, country, message_id } = this.props;\n    const loggedIn = session.logged_in;\n    return (\n      <Modal id=\"message-popup-modal\">\n        <div className={'message'}>\n          <p>{text}</p>\n        </div>\n        {loggedIn && (\n          <button className=\"like-btn\" onClick={this.handleLike}>\n            <FontAwesomeIcon icon={(liked && faHeartSolid) || faHeartRegular} />\n          </button>\n        )}\n        {city && (\n          <button className=\"images-btn\">\n            <Link to={`/images/${message_id}/${city}`}>\n              <FontAwesomeIcon icon={faImages} />\n            </Link>\n          </button>\n        )}\n      </Modal>\n    );\n  }\n}\n","const setLocation = () => {\n  const getLocation = () =>\n    new Promise((resolve, reject) => {\n      if ('geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const latitude = pos.coords.latitude;\n          const longitude = pos.coords.longitude;\n          const token = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n          fetch(\n            `https://api.mapbox.com/geocoding/v5/mapbox.places/${longitude},${latitude}.json?types=place,region,country&access_token=${token}`\n          )\n            .then(res => res.json())\n            .then(myJson => {\n              const [city, state, country] = myJson.features;\n              resolve({\n                lat: latitude,\n                lng: longitude,\n                city: city,\n                state: state,\n                country: country\n              });\n            });\n        });\n      } else {\n        reject('Sorry, browser does not support geolocation!');\n      }\n    });\n\n  return getLocation()\n    .then(pos => {\n      console.log(pos);\n      return fetch('http://0.0.0.0:5000/spirit/api/v1.0/set/location', {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify(pos),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    })\n    .then(res => {\n      return res.json().then(json => {\n        if (res.ok) {\n          return json;\n        }\n      });\n    })\n    .catch(error => {\n      alert(error);\n    });\n};\n\nexport default setLocation;\n","import React, { Component } from 'react';\nimport Modal from './Modal';\nimport { withRouter } from 'react-router-dom';\nimport setLocation from './setLocation';\n\nclass MessageFormView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: {},\n      messageData: ''\n    };\n  }\n\n  getUserLocation = () => {\n    this.setState({ location: setLocation() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.state.location.then(({ lat, lng, city, state, country }) => {\n      const postMessageUrl = 'http://0.0.0.0:5000/spirit/api/v1.0/message';\n      const messageData = {\n        messageText: this.state.messageData,\n        lng: lng,\n        lat: lat,\n        city: city ? city.text : null,\n        state: state ? state.text : null,\n        country: country ? country.text : null\n      };\n\n      this.props.history.push('/');\n      //optimistic loading create a feature and add it\n      fetch(postMessageUrl, {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify(messageData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => {\n          return res.json().then(json => {\n            if (res.ok) {\n              console.log('Success:', JSON.stringify(json));\n              this.props.addMessage(json);\n            }\n          });\n        })\n        .catch(error => console.error('Error:', error));\n    });\n  };\n\n  componentDidMount() {\n    this.getUserLocation();\n  }\n  handleChange = e => {\n    this.setState({ messageData: e.target.value });\n  };\n\n  render() {\n    return (\n      <Modal id=\"message-modal\">\n        <div className={'message'}>\n          <form onSubmit={this.handleSubmit}>\n            <h3>Write Message:</h3>\n            <textarea\n              name=\"message\"\n              rows=\"5\"\n              cols=\"30\"\n              type=\"text\"\n              value={this.state.messageData}\n              onChange={this.handleChange}\n            />\n            <input className={'btn'} type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default withRouter(MessageFormView);\n","import React, { Component } from 'react';\nimport Modal from './Modal';\nimport { withRouter } from 'react-router-dom';\nimport globe from './earth-animated.gif';\nimport styled from 'styled-components';\n\n\nconst StyledModal = styled.div`\n  background: white;\n  color: #3f618c;\n  font-weight: 400;\n  padding: 5px;\n  border-radius: 2px;\n`;\n\n\nclass Imageview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      images: [],\n      messageData: ''\n    };\n  }\n\n  componentDidMount() {\n    const imageUrl =\n      'http://0.0.0.0:5000/spirit/api/v1.0/images/' + this.props.city;\n    fetch(imageUrl, { credentials: 'include' })\n      .then(res => res.json())\n      .then(myJson => {\n        const images = myJson.graphql.location.edge_location_to_media.edges.slice(\n          0,\n          9\n        );\n        this.setState({ images: images, loading: false});\n      });\n  }\n\n  handleChange = e => {\n    this.setState({ messageData: e.target.value });\n  };\n\n  render() {\n    const {images, loading} = this.state;\n    return (\n      <div>\n      <Modal id=\"images-modal\">\n        {loading ? (\n          <img id=\"globe-spinner\" alt=\"globe spinning loader\" src={globe} />\n        ) : (\n          <div className={'images'}>\n            <div className=\"images-grid-layout\">\n              {images.length > 0 &&\n                images.map((image, i) => (\n                  <div className={'image'} key={i}>\n                    <img\n                      alt=\"intagram\"\n                      className={'image-wrapper'}\n                      src={image.node.display_url}\n                    />\n                  </div>\n                ))}\n            </div>\n          </div>\n        )}\n      </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Imageview);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport MessagePopup from './MessagePopup';\nimport MessageForm from './MessageForm';\nimport Imageview from './Imageview';\nimport {\n  withRouter,\n  Redirect,\n  Route,\n  Link,\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport ReactMapboxGl, {\n  Cluster,\n  Marker,\n  ZoomControl,\n  Layer,\n  Feature,\n  Popup\n} from 'react-mapbox-gl';\nimport Modal from './Modal';\nimport MapboxGL from 'mapbox-gl';\n\nconst geojsonUrl = 'http://0.0.0.0:5000/spirit/api/v1.0/geojson.json';\n\nconst mapStyle = {\n  position: 'absolute',\n  top: '8%',\n  left: '5%',\n  width: '90%',\n  height: '85%',\n  flex: 1,\n  border: '3px solid rgba(255, 0, 212, 0.79)',\n  boxShadow: '1px 1px 8px 4px rgba(188, 8, 232, 0.8)',\n  borderRadius: '4px'\n};\n\nconst StyledPopup = styled.div`\n  background: white;\n  color: #03a9f4;\n  font-weight: 500;\n  font-size: 1.2em;\n  padding: 5px;\n  border-radius: 2px;\n  line-height: 1.6;\n`;\n\nconst styles = {\n  clusterMarker: {\n    width: 30,\n    height: 30,\n    borderRadius: '50%',\n    backgroundColor: '#e147dc',\n    boxShadow: 'rgb(225, 71, 220) 0 0 6px 3px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n    cursor: 'pointer'\n  },\n  marker: {\n    width: 30,\n    height: 30,\n    borderRadius: '50%',\n    backgroundColor: '#E0E0E0',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: '2px solid #C9C9C9'\n  }\n};\n\nconst paint = {\n  'circle-blur': 0.5,\n  'circle-color': '#e147dc',\n  'circle-radius': 8,\n  'circle-stroke-width': 4,\n  'circle-stroke-color': '#e147dc',\n  'circle-stroke-opacity': 0.5\n};\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN\n});\n\nclass MapCompTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      geojson: { features: [] },\n      popup: undefined,\n      zoom: [1.5],\n      clickedFeature: undefined\n    };\n  }\n\n  clusterMarker = (\n    coordinates,\n    pointCount,\n    getLeaves: (limit, offset) => Array<React.ReactElement<any>>\n  ) => (\n    <Marker\n      key={coordinates.toString()}\n      coordinates={coordinates}\n      style={styles.clusterMarker}\n      onClick={this.clusterClick.bind(this, coordinates, pointCount, getLeaves)}\n    >\n      <div>{pointCount}</div>\n    </Marker>\n  );\n\n  onMove = () => {\n    if (this.state.popup) {\n      this.setState({ popup: undefined });\n    }\n  };\n\n  clusterClick = (\n    coordinates,\n    total,\n    getLeaves: (limit, offset) => Array<React.ReactElement<any>>,\n    e\n  ) => {\n    e.stopPropagation();\n    this.setState({\n      popup: {\n        coordinates,\n        total,\n        leaves: getLeaves()\n      }\n    });\n  };\n\n  createCoord = markerGeoJson => {\n    const coord = this.markerGeoJson.features.find(\n      feature => feature.properties.id === this.clickedFeature\n    ).geometry.coordinates;\n\n    return coord;\n  };\n\n  addMessage = message => {\n    this.setState({\n      geojson: {\n        features: [...this.state.geojson.features, message]\n      }\n    });\n  };\n\n  likeMessage = (message_id, state) => {\n    //modifiy geojson to match new state\n    const feature = this.getFeature(this.state.geojson, message_id);\n    this.setState({\n      geojson: {\n        features: [\n          //spread all except the one we will mutate\n          ...this.state.geojson.features.filter(f => {\n            return f !== feature;\n          }), // filter fearture we're updating\n          // put updated feature here\n          {\n            ...feature,\n            properties: {\n              ...feature.properties,\n              liked: state\n            }\n          }\n        ]\n      }\n    });\n  };\n\n  componentDidMount() {\n    fetch(geojsonUrl, { credentials: 'include' })\n      .then(res => res.json())\n      .then(myJson => {\n        this.setState({ geojson: myJson });\n      });\n    this.setState({ zoom: [10] });\n  }\n\n  getFeature = (geojson, clickedFeature) => {\n    return geojson.features.find(\n      feature => feature.properties.id === clickedFeature\n    );\n  };\n  shortenText = (text) =>{\n\n    if(text.length > 20){\n      console.log(text.substring(0,20))\n      return text.substring(0,20) + \"...\"\n    }\n    else return text\n  }\n  zoom = [9];\n\n  center = [-13.007812, 40.979898];\n\n  markerClick = feature => {\n    this.setState({\n      clickedFeature: feature.properties.id\n    });\n    this.props.history.push('/view-message/' + feature.properties.id);\n  };\n\n  handleMapClick = e => {\n    this.setState({ clickedFeature: undefined });\n  };\n\n  onStyleLoad = map => {\n    const { onStyleLoad } = this.props;\n    return onStyleLoad && onStyleLoad(map);\n  };\n\n  render() {\n    const { popup, geojson, clickedFeature } = this.state;\n    const session = this.props.session;\n    return (\n      <div>\n        <Map\n          onClick={this.handleMapClick}\n          onMove={this.onMove}\n          zoom={this.state.zoom}\n          style={'mapbox://styles/mapbox/streets-v9'}\n          center={this.center}\n          containerStyle={mapStyle}\n          onStyleLoad={this.onStyleLoad}\n          renderChildrenInPortal={true}\n        >\n          <ZoomControl position={'bottom-left'} />\n          <Cluster ClusterMarkerFactory={this.clusterMarker} radius={10}>\n            {geojson.features.map(\n              (feature, key) => (\n                (\n                  <Feature\n                    key={key}\n                    style={styles.marker}\n                    coordinates={feature.geometry.coordinates}\n                    data-feature={feature}\n                  >\n                    <div title={feature.properties.id}>\n                      {feature.properties.id}\n                    </div>\n                  </Feature>\n                )\n              )\n            )}\n          </Cluster>\n          {popup && (\n            <Popup offset={[0, -10]} coordinates={popup.coordinates}>\n              <StyledPopup>\n                {popup.leaves.map(\n                  (leaf, index) => (\n                    (\n                      <div \n                        className=\"popup-link\"\n                        id={index}\n                        onClick={this.markerClick.bind(\n                          this,\n                          leaf.props['data-feature']\n                        )}\n                        key={index}\n                      >\n                        {this.shortenText(leaf.props['data-feature'].properties.text)}\n                      </div>\n                    )\n                  )\n                )}\n                {popup.total > popup.leaves.length ? (\n                  <div>And more...</div>\n                ) : null}\n              </StyledPopup>\n            </Popup>\n          )}\n          <Layer\n            type=\"circle\"\n            id=\"cluster_layer\"\n            layerOptions={{\n              filter: ['has', 'point_count']\n            }}\n            paint={paint}\n          >\n            {geojson.features.map((feature, i) => (\n              <Feature\n                key={i}\n                coordinates={feature.geometry.coordinates}\n                onClick={this.markerClick.bind(this, feature)}\n              />\n            ))}\n          </Layer>\n        </Map>\n        <Route\n          path=\"/message\"\n          render={() => <MessageForm addMessage={this.addMessage} />}\n        />\n        {geojson.features.length > 0 && (\n          <div>\n            <Route\n              path=\"/view-message/:id\"\n              render={params => {\n                const id = parseInt(params.match.params.id);\n                const feature = this.getFeature(geojson, id);\n                return (\n                  <MessagePopup\n                    likeMessage={this.likeMessage}\n                    liked={feature.properties.liked}\n                    session={session}\n                    message_id={id}\n                    text={feature.properties.text}\n                    country={feature.properties.country}\n                    city={feature.properties.city}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/images/:id\"\n              render={params => {\n                const id = parseInt(params.match.params.id);\n                const feature = this.getFeature(geojson, id);\n                return (\n                  <Imageview\n                    city={feature.properties.city}\n                    session={session}\n                    message_id={id}\n                  />\n                );\n              }}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default withRouter(MapCompTest);\n","import React, { Component } from 'react';\nimport Modal from './Modal';\nimport {\n  withRouter,\n  Route,\n  Link,\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nclass RegistrationFormView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      error: false,\n      errorMessage: undefined\n    };\n  }\n\n  handleSubmit = e => {\n    const args = { email: this.state.email, password: this.state.password };\n    e.preventDefault();\n    const registerUserUrl = 'http://0.0.0.0:5000/spirit/api/v1.0/register';\n\n    fetch(registerUserUrl, {\n      credentials : 'include',\n      method: 'POST',\n      body: JSON.stringify(args),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n        return res.json()\n          .then(json => {\n            if (res.ok) {\n              this.props.onLogin()\n              this.props.history.push('/');\n            } \n            else {\n              this.setState({error: true, errorMessage : json.error })\n            }\n          })\n      })\n      .catch(error => {\n        alert('Error:', error);\n      });\n  };\n\n  handleChange = e => {\n    if (e.target.name === 'email') {\n      this.setState({ email: e.target.value });\n    }\n    if (e.target.name === 'password') {\n      this.setState({ password: e.target.value });\n    }\n  };\n\n  render() {\n    const {email, password, errorMessage} = this.state;\n    return (\n      <Modal error={errorMessage} formName={'Register'} id=\"register-modal\">\n        <div className={'register'}>\n          <form onSubmit={this.handleSubmit}>\n            <label>Email</label>\n            <input\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n            <label>Password</label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n            <input className={\"btn\"} type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\nexport default withRouter(RegistrationFormView);\n","import React, { Component } from 'react';\nimport Modal from './Modal';\nimport {\n  withRouter,\n  Route,\n  Link,\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nclass LoginFormView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      error: false,\n      errorMessage : undefined\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const registerUserUrl = 'http://0.0.0.0:5000/spirit/api/v1.0/login';\n  \n    fetch(registerUserUrl, {\n      credentials : 'include',\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        return res.json()\n          .then(json => {\n            if (res.ok) {\n              this.props.onLogin()\n              this.props.history.push('/');\n            } \n            else {\n              this.setState({error: true, errorMessage : json.error })\n            }\n          })\n      })\n      .catch(error => {\n        console.error('Error:', error)\n        alert(error)\n      });\n  };\n\n  handleChange = e => {\n    if(e.target.name === \"email\"){\n      this.setState({ email: e.target.value });\n    }\n    if(e.target.name === \"password\"){\n      this.setState({ password: e.target.value });\n    }\n  };\n\n  render() {\n    const {email, password, errorMessage} = this.state;\n    return (\n      <Modal error={errorMessage} formName={\"Login\"} id=\"login-modal\">\n        <div className={'login'}>\n          <form onSubmit={this.handleSubmit}>\n            <label>Email</label>\n            <input\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n            <label>Password</label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n            <input className={\"btn\"} type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\nexport default withRouter(LoginFormView);\n","import React, { Component } from 'react';\nimport {\n  withRouter,\n  Link,\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as faHeartRegular } from '@fortawesome/free-regular-svg-icons';\nimport {\n  faHeart as faHeartSolid,\n  faLeaf\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AllLikes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: false,\n      setIsFetching: false,\n      page: 1,\n      allLikedFeatures: [],\n      hasNext: true\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.session.id !== prevProps.session.id) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = e => {\n    const user_id = this.props.session.id;\n    if (user_id) {\n      const likeMessagesUrl = `http://0.0.0.0:5000/spirit/api/v1.0/message/${user_id}/like?page=${this.state.page}`;\n      fetch(likeMessagesUrl, {\n        credentials: 'include'\n      })\n        .then(res => {\n          return res.json().then(json => {\n            if (res.ok) {\n              this.setState(prevState => {\n                return {\n                  page: prevState.page + 1,\n                  setIsFetching: true,\n                  hasNext: json[1],\n                  allLikedFeatures: prevState.allLikedFeatures.concat(json[0])\n                };\n              });\n            }\n          });\n        })\n        .catch(error => console.error('Error:', error));\n    }\n  };\n\n  handleScroll = e => {\n    const { isFetching, hasNext } = this.state;\n    let element = e.target;\n    let bottom =\n      element.scrollHeight - element.scrollTop === element.clientHeight;\n\n    if (bottom && !isFetching && hasNext) {\n      this.fetchData();\n    }\n  };\n\n  componentDidMount() {\n    if (!this.props.session) return null;\n    else {\n      this.fetchData();\n    }\n  }\n  render() {\n    if (!this.props.session) return null;\n    const { allLikedFeatures } = this.state;\n    return (\n      <Modal scroll={this.handleScroll} formName={'Liked Messages'} id=\"liked-message-modal\">\n        {allLikedFeatures.length > 0 && (\n          <ul id={'liked-message-list'}>\n            <SimpleBar style={{ height: '100px'}}>\n            {allLikedFeatures.map((feature, i) => (\n              <div key={i} id={'liked-feature-btn'}>\n                <Link to={`view-message/` + feature.properties.id}>\n                  {feature.properties.text}\n                </Link>\n              </div>\n            ))}\n            </SimpleBar>\n          </ul>\n        )}\n        <div>\n          {allLikedFeatures.length > 0 || (\n            <h3 className=\"solid-like\">\n              Add Some Likes <FontAwesomeIcon icon={faHeartSolid} />\n            </h3>\n          )}\n        </div>\n      </Modal>\n    );\n  }\n}\nexport default withRouter(AllLikes);\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  withRouter,\n  Redirect,\n  Route,\n  Link,\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faPencilAlt, faHeart, faSignOutAlt, faPlusCircle} from '@fortawesome/free-solid-svg-icons';\nimport RegistrationForm from './RegistrationForm';\nimport MessageForm from './MessageForm';\nimport LoginForm from './LoginForm';\nimport AllLikes from './AllLikes';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: ''\n    };\n  }\n  handleLogout = e => {\n    e.preventDefault();\n    const registerUserUrl = 'http://0.0.0.0:5000/spirit/api/v1.0/logout';\n\n    fetch(registerUserUrl, {\n      credentials: 'include',\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        return res.json().then(json => {\n          if (res.ok) {\n            this.props.onlogOut();\n            this.props.history.push('/');\n          } else {\n            this.setState({ error: true, errorMessage: json.error });\n          }\n        });\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  render() {\n    const { onLogin, session } = this.props;\n    const logged_in = session.logged_in;\n    return (\n      <div>\n        <header id=\"nav\" className=\"navbar navbar-expand navbar-dark flex-md-row bd-navbar\">\n          <div>\n          {logged_in && (\n            <ul className=\"navbar-nav bd-navbar-nav flex-row\">\n                <li id=\"new-message\" className=\"nav-item\">\n                  <Link to=\"/message\">\n                    New\n                    <FontAwesomeIcon icon={faPlusCircle} />\n                   </Link>\n                </li>\n                <li id=\"all-likes\" className=\"nav-item solid-like\">\n                <Link to=\"/likes\">\n                  Likes\n                  <FontAwesomeIcon icon={faHeart} />\n                </Link>\n                </li>\n              \n            </ul>\n            )}\n          </div>\n          <ul className=\"navbar-nav flex-row\" id=\"logoutUl\">\n            {logged_in || (\n              <div className=\"nav-item login-btns\">\n                <li id=\"login\">\n                  <Link to=\"/login\">Login</Link>\n                </li>\n                <li id=\"register\">\n                  <Link to=\"/register\">Register</Link>\n                </li>\n              </div>\n            )}\n            {logged_in && (\n              <li id=\"logout\" className=\"nav-item\">\n                <Link to=\"/logout\" onClick={this.handleLogout}>\n                  Logout\n                  <FontAwesomeIcon icon={faSignOutAlt}/>\n                </Link>\n              </li>\n            )}\n          </ul>\n        </header>\n        <Route path=\"/likes\" render={() => <AllLikes session={session}/>} />\n        <Route\n          path=\"/register\"\n          render={() => <RegistrationForm onLogin={onLogin} />}\n        />\n        <Route path=\"/logout\" />\n        <Route path=\"/login\" render={() => <LoginForm onLogin={onLogin} />} />\n      </div>\n    );\n  }\n}\nexport default withRouter(Navbar);\n","const UserProfile = (() => {\n    return fetch('http://0.0.0.0:5000/spirit/api/v1.0/me', {credentials: 'include'})\n    .then(res => res.json())\n    .then(response => {\n        return response\n    })\n  });\n  \n  export default UserProfile;","import React, { Component } from 'react';\nimport Video from './Video'\nimport Map from './Map';\nimport Navbar from './Navbar';\nimport UserProfile from './UserProfile';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: {}\n    };\n  }\n\n  getSession = () => {\n    UserProfile().then(session => {\n      this.setState({ session: session });\n    });\n  };\n  \n  componentDidMount() {\n    this.getSession();\n  }\n  render() {\n    const loggedIn = this.state.session['logged_in'];\n    return (\n      <div id=\"main\">\n        <Video/>\n        <Navbar\n          session={this.state.session}\n          onLogin={() => this.getSession()}\n          onlogOut={() => this.getSession()}\n        />\n        <Map session={this.state.session} loggedIn={loggedIn} />\n      </div>\n    );\n  }\n}\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Stars_Timelapse_from_Beach_1Videvo.d83cfef1.mov\";","module.exports = __webpack_public_path__ + \"static/media/earth-animated.5b52cac9.gif\";"],"sourceRoot":""}